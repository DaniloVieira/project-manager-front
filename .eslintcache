[{"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\store\\reducers\\exampleReducer.js":"1","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\ManageProjects\\ManageProjects.js":"2","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Activity\\ActivitiesTable.js":"3","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\SideMenu\\SideMenu.js":"4","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\App.js":"5","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\services\\index.js":"6","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Activity\\Activities.js":"7","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\reportWebVitals.js":"8","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\store\\reducers\\reducer.js":"9","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\store\\actionTypes.js":"10","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Projects\\Projects.js":"11","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\Shared\\utility.js":"12","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Activity\\ActivityFormDialog.js":"13","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\Shared\\Components\\DeleteDialog\\DeleteDialog.js":"14","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\Shared\\Components\\TablePagination\\TablePagination.js":"15","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\ManageProjects\\Form.js":"16","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\AuxData\\Videos.js":"17","C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\AppTopBar\\AppTopBar.js":"18"},{"size":2425,"mtime":1616261776740,"results":"19","hashOfConfig":"20"},{"size":1749,"mtime":1616261776648,"results":"21","hashOfConfig":"20"},{"size":3136,"mtime":1616261776632,"results":"22","hashOfConfig":"20"},{"size":3717,"mtime":1616261776656,"results":"23","hashOfConfig":"20"},{"size":2191,"mtime":1617830296881,"results":"24","hashOfConfig":"20"},{"size":249,"mtime":1617830296914,"results":"25","hashOfConfig":"20"},{"size":9646,"mtime":1617830453143,"results":"26","hashOfConfig":"20"},{"size":362,"mtime":1610804290404,"results":"27","hashOfConfig":"20"},{"size":753,"mtime":1616261776745,"results":"28","hashOfConfig":"20"},{"size":687,"mtime":1617830296915,"results":"29","hashOfConfig":"20"},{"size":477,"mtime":1616261776652,"results":"30","hashOfConfig":"20"},{"size":566,"mtime":1612889828616,"results":"31","hashOfConfig":"20"},{"size":3189,"mtime":1614729943653,"results":"32","hashOfConfig":"20"},{"size":3116,"mtime":1614729886897,"results":"33","hashOfConfig":"20"},{"size":2311,"mtime":1613159839346,"results":"34","hashOfConfig":"20"},{"size":6497,"mtime":1616262467522,"results":"35","hashOfConfig":"20"},{"size":2319,"mtime":1611704724624,"results":"36","hashOfConfig":"20"},{"size":2454,"mtime":1616261776634,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oidbvn",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\store\\reducers\\exampleReducer.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\ManageProjects\\ManageProjects.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Activity\\ActivitiesTable.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\SideMenu\\SideMenu.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\App.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\services\\index.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Activity\\Activities.js",["76","77","78"],"import React, { useState, Fragment, useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/actions';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Fab,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ActivitiesTable from './ActivitiesTable';\r\nimport DeleteDialog from '../../Shared/Components/DeleteDialog/DeleteDialog';\r\nimport ActivityFormDialog from './ActivityFormDialog';\r\n\r\nimport {\r\n  fetchActivitiesData,\r\n  fetchProjectDomain,\r\n  fetchProjectById,\r\n  saveActivity,\r\n  fetchActivityById,\r\n  deleteActivityById,\r\n} from '../../services';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  position: {\r\n    marginTop: '25px',\r\n  },\r\n  fab: {\r\n    position: 'relative',\r\n    top: theme.spacing(6),\r\n    left: theme.spacing(0),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n}));\r\n\r\nconst Activities = (props) => {\r\n  const { userId } = props;\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [onloadError, setOnloadError] = useState(false);\r\n  const [backDrop, setBackDrop] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [openDeleteDiag, setOpenDeleteDiag] = useState(false);\r\n  const [openFormDiag, setOpenFormDiag] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [projectId, setProjectId] = useState(undefined);\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [activity, setActivity] = useState(null);\r\n  const [selectedProject, setSelectedProject] = useState({\r\n    description: '',\r\n    clientName: '',\r\n    dtExpectedCompletion: '',\r\n  });\r\n\r\n  const errorSnackbar = useCallback(() => {\r\n    const result = enqueueSnackbar('Error on load records', {\r\n      variant: 'error',\r\n    });\r\n    setOnloadError(result ? true : false);\r\n    setBackDrop(false);\r\n  }, [enqueueSnackbar]);\r\n\r\n  const fetchActivities = useCallback(() => {\r\n    if (projectId) {\r\n      setBackDrop(true);\r\n      fetchActivitiesData(\r\n        (resp) => {\r\n          setRows(resp.data.value);\r\n          setBackDrop(false);\r\n        },\r\n        errorSnackbar,\r\n        projectId,\r\n        userId,\r\n        page + 1,\r\n        pageSize\r\n      );\r\n    }\r\n  }, [errorSnackbar, projectId, page, pageSize, userId]);\r\n\r\n  useEffect(() => {\r\n    if (!onloadError) {\r\n      fetchProjectDomain(\r\n        (resp) => {\r\n          const projectsDomain = resp.data;\r\n          setProjects(projectsDomain);\r\n          // setProjectId(projectsDomain[0].value);\r\n          // if (projectsDomain.length > 1) {\r\n          //   setDisabled(false);\r\n          // }\r\n        },\r\n        errorSnackbar,\r\n        userId\r\n      );\r\n    }\r\n  }, [onloadError, errorSnackbar, userId]);\r\n\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      fetchProjectById(\r\n        (resp) => {\r\n          const projectData = resp.data.value;\r\n          setSelectedProject(projectData);\r\n        },\r\n        errorSnackbar,\r\n        projectId\r\n      );\r\n    }\r\n  }, [projectId, errorSnackbar]);\r\n\r\n  useEffect(() => {\r\n    fetchActivities();\r\n  }, [fetchActivities]);\r\n\r\n  useEffect(() => {\r\n    props.setTitleOnLoad();\r\n  });\r\n\r\n  const selectChangeHandler = (event) => {\r\n    setProjectId(event.target.value);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangePageSize = (event) => {\r\n    setPageSize(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleCloseDeleteDiag = (value) => {\r\n    setOpenDeleteDiag(false);\r\n    setSelectedValue(null);\r\n  };\r\n\r\n  const handleConfirmDeleteDiag = (value) => {\r\n    deleteActivityById(\r\n      (resp) => {\r\n        fetchActivities();\r\n        setOpenDeleteDiag(false);\r\n        setSelectedValue(null);\r\n        enqueueSnackbar(resp.data.message, {\r\n          variant: 'success',\r\n        });\r\n      },\r\n      errorSnackbar,\r\n      selectedValue\r\n    );\r\n  };\r\n\r\n  const onClickDeleteHandler = (id) => {\r\n    setOpenDeleteDiag(true);\r\n    setSelectedValue(id);\r\n  };\r\n\r\n  const onClickPlusHandler = () => {\r\n    setActivity({\r\n      id: null,\r\n      description: '',\r\n      details: '',\r\n      dtStart: null,\r\n      dtEnd: null,\r\n      userId: userId,\r\n      projectId: projectId,\r\n    });\r\n    setOpenFormDiag(true);\r\n  };\r\n\r\n  const handleCloseFormDiag = (value) => {\r\n    setOpenFormDiag(false);\r\n    setActivity(null);\r\n  };\r\n\r\n  const onClickEditHandler = (id) => {\r\n    fetchActivityById(\r\n      (resp) => {\r\n        const selected = resp.data.value;\r\n        setActivity({\r\n          ...selected,\r\n        });\r\n        setOpenFormDiag(true);\r\n      },\r\n      errorSnackbar,\r\n      id\r\n    );\r\n  };\r\n\r\n  const formInputChangeHandler = (value, identifier) => {\r\n    setActivity({ ...activity, [identifier]: value });\r\n  };\r\n\r\n  const onSaveActivityHandler = () => {\r\n    setBackDrop(true);\r\n    saveActivity(\r\n      (resp) => {\r\n        setOpenFormDiag(false);\r\n        fetchActivities();\r\n        setActivity(null);\r\n        setBackDrop(false);\r\n        enqueueSnackbar(resp.data.message, {\r\n          variant: 'success',\r\n        });\r\n      },\r\n      (err) => {\r\n        setBackDrop(false);\r\n        enqueueSnackbar(err, {\r\n          variant: 'danger',\r\n        });\r\n      },\r\n      {\r\n        ...activity,\r\n      }\r\n    );\r\n  };\r\n\r\n  const projectInfo = (label, value) => (\r\n    <Typography\r\n      variant='body1'\r\n      className={classes.position}\r\n      color='textPrimary'\r\n    >\r\n      {label}: {value}\r\n    </Typography>\r\n  );\r\n\r\n  const table = projectId ? (\r\n    <Grid item container xs={12}>\r\n      <Grid item xs={12}>\r\n        <Fab\r\n          size='small'\r\n          color='primary'\r\n          aria-label='add'\r\n          // className={classes.fab}\r\n          onClick={onClickPlusHandler}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Grid>\r\n      <ActivitiesTable\r\n        rows={rows}\r\n        onClickEditHandler={onClickEditHandler}\r\n        onClickDeleteHandler={onClickDeleteHandler}\r\n        page={page}\r\n        pageSize={pageSize}\r\n        handleChangePage={handleChangePage}\r\n        handleChangePageSize={handleChangePageSize}\r\n      />\r\n    </Grid>\r\n  ) : (\r\n    <Container maxWidth='sm'>\r\n      <Typography\r\n        style={{ marginTop: '50%' }}\r\n        variant='h4'\r\n        color='textSecondary'\r\n      >\r\n        Select a project\r\n      </Typography>\r\n    </Container>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container direction='column' spacing={8}>\r\n        <Grid item container xs={12} spacing={4}>\r\n          <Grid item xs={4}>\r\n            {/* <TextField\r\n              id='project-id'\r\n              select\r\n              label='Project'\r\n              margin='dense'\r\n              fullWidth\r\n              size='small'\r\n              value={projectId}\r\n              onChange={(event) => selectChangeHandler(event)}\r\n              // disabled={disabled}\r\n              // SelectProps={{\r\n              //   native: true,\r\n              // }}\r\n            >\r\n              {projects.map((option) => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </TextField> */}\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id='project-id-select-label'>Project</InputLabel>\r\n              <Select\r\n                labelId='project-id-select-label'\r\n                id='project-id'\r\n                margin='dense'\r\n                fullWidth\r\n                size='small'\r\n                value={projectId}\r\n                onChange={selectChangeHandler}\r\n                // disabled={disabled}\r\n              >\r\n                {projects.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            {projectInfo('Client', selectedProject.clientName)}\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            {projectInfo('Completion', selectedProject.dtExpectedCompletion)}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {table}\r\n      </Grid>\r\n      <DeleteDialog\r\n        open={openDeleteDiag}\r\n        onCancel={handleCloseDeleteDiag}\r\n        onConfirm={handleConfirmDeleteDiag}\r\n      />\r\n      {activity ? (\r\n        <ActivityFormDialog\r\n          activity={activity}\r\n          open={openFormDiag}\r\n          onClose={handleCloseFormDiag}\r\n          onSubmitSave={onSaveActivityHandler}\r\n          inputChangeHandler={formInputChangeHandler}\r\n        />\r\n      ) : null}\r\n      <Backdrop className={classes.backdrop} open={backDrop}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setTitleOnLoad: () =>\r\n      //dispatch({ type: actionTypes.SET_TITLE, title: 'Activities' }),\r\n      dispatch(actions.setTitle('Activities')),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities);\r\n",["79","80"],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\reportWebVitals.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\store\\reducers\\reducer.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\store\\actionTypes.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Projects\\Projects.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\Shared\\utility.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\Activity\\ActivityFormDialog.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\Shared\\Components\\DeleteDialog\\DeleteDialog.js",["81"],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\Shared\\Components\\TablePagination\\TablePagination.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\ManageProjects\\Form.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\AuxData\\Videos.js",[],"C:\\Users\\Quali\\Projetos\\Estudos\\project-manager-front\\src\\components\\AppTopBar\\AppTopBar.js",[],{"ruleId":"82","severity":1,"message":"83","line":7,"column":3,"nodeType":"84","messageId":"85","endLine":7,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":66,"column":10,"nodeType":"84","messageId":"85","endLine":66,"endColumn":18},{"ruleId":"82","severity":1,"message":"87","line":66,"column":20,"nodeType":"84","messageId":"85","endLine":66,"endColumn":31},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"92","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]